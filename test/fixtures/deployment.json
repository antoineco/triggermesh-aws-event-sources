{
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
        "annotations": {
            "deployment.kubernetes.io/revision": "1"
        },
        "creationTimestamp": "2020-04-26T13:23:03Z",
        "generation": 1,
        "labels": {
            "app.kubernetes.io/component": "adapter",
            "app.kubernetes.io/instance": "sample",
            "app.kubernetes.io/managed-by": "aws-event-sources-controller",
            "app.kubernetes.io/name": "awscodecommitsource",
            "app.kubernetes.io/part-of": "aws-event-sources"
        },
        "name": "awscodecommitsource-sample",
        "namespace": "dev",
        "ownerReferences": [
            {
                "apiVersion": "sources.triggermesh.io/v1alpha1",
                "blockOwnerDeletion": true,
                "controller": true,
                "kind": "AWSCodeCommitSource",
                "name": "sample",
                "uid": "eb046145-ca7e-4f14-a208-5a70affe6dec"
            }
        ],
        "resourceVersion": "588997",
        "selfLink": "/apis/apps/v1/namespaces/dev/deployments/awscodecommitsource-sample",
        "uid": "c949ce89-9953-4ad7-958e-9adaef9a5d83"
    },
    "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
            "matchLabels": {
                "app.kubernetes.io/instance": "sample",
                "app.kubernetes.io/name": "awscodecommitsource"
            }
        },
        "strategy": {
            "rollingUpdate": {
                "maxSurge": "25%",
                "maxUnavailable": "25%"
            },
            "type": "RollingUpdate"
        },
        "template": {
            "metadata": {
                "creationTimestamp": null,
                "labels": {
                    "app.kubernetes.io/component": "adapter",
                    "app.kubernetes.io/instance": "sample",
                    "app.kubernetes.io/managed-by": "aws-event-sources-controller",
                    "app.kubernetes.io/name": "awscodecommitsource",
                    "app.kubernetes.io/part-of": "aws-event-sources"
                }
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "NAME",
                                "value": "sample"
                            },
                            {
                                "name": "NAMESPACE",
                                "value": "dev"
                            },
                            {
                                "name": "K_SINK",
                                "value": "http://broker-ingress.knative-eventing.svc.cluster.local/dev/default"
                            },
                            {
                                "name": "K_LOGGING_CONFIG",
                                "value": "{\"zap-logger-config\":\"{\\n  \\\"level\\\": \\\"info\\\",\\n  \\\"development\\\": false,\\n  \\\"outputPaths\\\": [\\\"stdout\\\"],\\n  \\\"errorOutputPaths\\\": [\\\"stderr\\\"],\\n  \\\"encoding\\\": \\\"json\\\",\\n  \\\"encoderConfig\\\": {\\n    \\\"timeKey\\\": \\\"ts\\\",\\n    \\\"levelKey\\\": \\\"level\\\",\\n    \\\"nameKey\\\": \\\"logger\\\",\\n    \\\"callerKey\\\": \\\"caller\\\",\\n    \\\"messageKey\\\": \\\"msg\\\",\\n    \\\"stacktraceKey\\\": \\\"stacktrace\\\",\\n    \\\"lineEnding\\\": \\\"\\\",\\n    \\\"levelEncoder\\\": \\\"\\\",\\n    \\\"timeEncoder\\\": \\\"iso8601\\\",\\n    \\\"durationEncoder\\\": \\\"\\\",\\n    \\\"callerEncoder\\\": \\\"\\\"\\n  }\\n}\\n\"}"
                            },
                            {
                                "name": "K_METRICS_CONFIG",
                                "value": "{\"Domain\":\"triggermesh.io/source\",\"Component\":\"awscodecommitsource\",\"PrometheusPort\":0,\"ConfigMap\":{}}"
                            },
                            {
                                "name": "REPO",
                                "value": "triggermeshtest"
                            },
                            {
                                "name": "BRANCH",
                                "value": "master"
                            },
                            {
                                "name": "AWS_REGION",
                                "value": "eu-central-1"
                            },
                            {
                                "name": "EVENT_TYPES",
                                "value": "push,pull_request"
                            },
                            {
                                "name": "AWS_ACCESS_KEY_ID",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "aws_access_key_id",
                                        "name": "awscreds"
                                    }
                                }
                            },
                            {
                                "name": "AWS_SECRET_ACCESS_KEY",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "aws_secret_access_key",
                                        "name": "awscreds"
                                    }
                                }
                            }
                        ],
                        "image": "gcr.io/triggermesh/awscodecommitsource",
                        "imagePullPolicy": "Always",
                        "name": "adapter",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "name": "health",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9090,
                                "name": "metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/health",
                                "port": "health",
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "45Mi"
                            },
                            "requests": {
                                "cpu": "90m",
                                "memory": "30Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "FallbackToLogsOnError"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "terminationGracePeriodSeconds": 30
            }
        }
    },
    "status": {
        "availableReplicas": 1,
        "conditions": [
            {
                "lastTransitionTime": "2020-04-26T13:23:03Z",
                "lastUpdateTime": "2020-04-26T13:23:27Z",
                "message": "ReplicaSet \"awscodecommitsource-sample-5774c7984d\" has successfully progressed.",
                "reason": "NewReplicaSetAvailable",
                "status": "True",
                "type": "Progressing"
            },
            {
                "lastTransitionTime": "2020-04-26T13:24:53Z",
                "lastUpdateTime": "2020-04-26T13:24:53Z",
                "message": "Deployment has minimum availability.",
                "reason": "MinimumReplicasAvailable",
                "status": "True",
                "type": "Available"
            }
        ],
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
    }
}
