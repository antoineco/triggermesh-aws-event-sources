/*
Copyright (c) 2020 TriggerMesh Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/triggermesh/aws-event-sources/pkg/apis/sources/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AWSCloudWatchLogSourceLister helps list AWSCloudWatchLogSources.
type AWSCloudWatchLogSourceLister interface {
	// List lists all AWSCloudWatchLogSources in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.AWSCloudWatchLogSource, err error)
	// AWSCloudWatchLogSources returns an object that can list and get AWSCloudWatchLogSources.
	AWSCloudWatchLogSources(namespace string) AWSCloudWatchLogSourceNamespaceLister
	AWSCloudWatchLogSourceListerExpansion
}

// aWSCloudWatchLogSourceLister implements the AWSCloudWatchLogSourceLister interface.
type aWSCloudWatchLogSourceLister struct {
	indexer cache.Indexer
}

// NewAWSCloudWatchLogSourceLister returns a new AWSCloudWatchLogSourceLister.
func NewAWSCloudWatchLogSourceLister(indexer cache.Indexer) AWSCloudWatchLogSourceLister {
	return &aWSCloudWatchLogSourceLister{indexer: indexer}
}

// List lists all AWSCloudWatchLogSources in the indexer.
func (s *aWSCloudWatchLogSourceLister) List(selector labels.Selector) (ret []*v1alpha1.AWSCloudWatchLogSource, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AWSCloudWatchLogSource))
	})
	return ret, err
}

// AWSCloudWatchLogSources returns an object that can list and get AWSCloudWatchLogSources.
func (s *aWSCloudWatchLogSourceLister) AWSCloudWatchLogSources(namespace string) AWSCloudWatchLogSourceNamespaceLister {
	return aWSCloudWatchLogSourceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AWSCloudWatchLogSourceNamespaceLister helps list and get AWSCloudWatchLogSources.
type AWSCloudWatchLogSourceNamespaceLister interface {
	// List lists all AWSCloudWatchLogSources in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.AWSCloudWatchLogSource, err error)
	// Get retrieves the AWSCloudWatchLogSource from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.AWSCloudWatchLogSource, error)
	AWSCloudWatchLogSourceNamespaceListerExpansion
}

// aWSCloudWatchLogSourceNamespaceLister implements the AWSCloudWatchLogSourceNamespaceLister
// interface.
type aWSCloudWatchLogSourceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AWSCloudWatchLogSources in the indexer for a given namespace.
func (s aWSCloudWatchLogSourceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AWSCloudWatchLogSource, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AWSCloudWatchLogSource))
	})
	return ret, err
}

// Get retrieves the AWSCloudWatchLogSource from the indexer for a given namespace and name.
func (s aWSCloudWatchLogSourceNamespaceLister) Get(name string) (*v1alpha1.AWSCloudWatchLogSource, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("awscloudwatchlogsource"), name)
	}
	return obj.(*v1alpha1.AWSCloudWatchLogSource), nil
}
